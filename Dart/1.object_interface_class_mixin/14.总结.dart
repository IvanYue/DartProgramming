/**
 * 对象、接口、类与mixin 总结
 * 
 * Dart 是一种纯面向对象的基于类的编程语言。这意味着所有运行时值都是对象，且每个对象都有某个类的实例。
 * 
 * 对象有状态和行为。状态只能通过特殊的 accessor 方法访问：getter和setter。这确保了Dart对象上的所有计算都是通过程序接口完成的
 * 
 * 类 在运行时才具体化，对象本身也必须如此。因此，每个类都是类型为Type的元类的一个实例。每个类至少都有一个构造函数，构造函数用于创建对象。
 * 某些对象是常量，这意味着他们在编译时就可以预先计算。
 * 
 * 每一个Dart类都有唯一的父类，除了类层次结构的根，即Object。所有Dart对象都以Object继承了共同的行为。
 * 
 * Dart支持基于mixin的继承：每个类都引入了一个mixin，它捕获了类本身对类层次即够所做的独特贡献。
 * mixin 使类的代码以模块化方式重用，而不依赖于它在类层次结构中的位置。
 */